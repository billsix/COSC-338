DUE (Date not set, but for those who want to get ahead)
- Implement a game of Pong in Python, using the NDC
  coordinate system.  Pong has two paddles, and a ball
  which moves back and forth.  On collision of the ball
  with and edge or a paddle, it changes direction.
  When a score happens, a new ball should come out 3 seconds
  later.
  You do not need to keep track of the score, just the rendering,
  collision detection, and changing of the ball's velocity.

DUE 03 FEB 2020
- Have git installed.  Visual Studio has git integration,
  on Windows there is also "git bash", which is a command line
  tool.
  Become good enough with git that you will be able to download
  updates (via "git pull") from modelviewprojection and
  this repo.
  Git will not be required for code submissions, but you
  will need to download updates.  This could always be
  done incrementally using github's "download zip" feature,
  but you really should learn how to use git.

  An excellent resource https://git-scm.com/book/en/v2

- Make sure you can get modelviewprojection up and running
 on your personal hardware, or on the Lab's machines, where
 it has already been tested via visual studio.
